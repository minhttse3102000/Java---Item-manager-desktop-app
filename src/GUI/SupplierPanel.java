/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ItemDAO;
import DAO.SupplierDAO;
import DTO.SupplierDTO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author minhv
 */
public class SupplierPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierPanel
     */
    boolean saveForAdd=false;
    ArrayList<SupplierDTO> supplierList;
    public SupplierPanel() {
        initComponents();
        loadSupplierTable();
    }
    
    void loadSupplierTable(){
        Vector data = new Vector();
        Vector header = new Vector();
        header.add("Code");
        header.add("Name");
        header.add("Address");
        supplierList=new ArrayList<>();
        supplierList=SupplierDAO.getSupplierData();
        for (SupplierDTO supplierDTO : supplierList) {
            Vector row = new Vector();
            row.add(supplierDTO.getSupCode());
            row.add(supplierDTO.getSupName());
            row.add(supplierDTO.getAddress());
            data.add(row);
        }
        if (data.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Not Supplier Data");
        }

        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        model.setDataVector(data, header);
        
        supplierTable.setRowSelectionInterval(0, 0);
        supplierTableMouseClicked(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel33 = new javax.swing.JPanel();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        collaboratingCheckBox = new javax.swing.JCheckBox();
        codeTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        addButon = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel129.setText("Code");

        jLabel130.setText("Name");

        jLabel131.setText("Address");

        jLabel132.setText("Collaborating");

        addButon.setText("Add New");
        addButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel132)
                    .addComponent(jLabel129)
                    .addComponent(jLabel130)
                    .addComponent(jLabel131)
                    .addComponent(addButon))
                .addGap(31, 31, 31)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(44, 44, 44)
                        .addComponent(deleteButton))
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(collaboratingCheckBox)
                        .addComponent(codeTextField)
                        .addComponent(nameTextField)
                        .addComponent(addressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel129)
                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel130)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel131)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(collaboratingCheckBox))
                .addGap(54, 54, 54)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButon)
                    .addComponent(saveButton)
                    .addComponent(deleteButton))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        supplierTable.getTableHeader().setReorderingAllowed(false);
        supplierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(supplierTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void supplierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTableMouseClicked
        // TODO add your handling code here:
        int index=supplierTable.getSelectedRow();
        if(index>=0){        
            saveForAdd=false;
            codeTextField.disable();
            codeTextField.setText(supplierList.get(index).getSupCode());
            nameTextField.setText(supplierList.get(index).getSupName());
            addressTextField.setText(supplierList.get(index).getAddress());
            if(supplierList.get(index).getCollaborating()==1){
                collaboratingCheckBox.setSelected(true);
            }else{
                collaboratingCheckBox.setSelected(false);
            }
        }
    }//GEN-LAST:event_supplierTableMouseClicked

    private void addButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButonActionPerformed
        // TODO add your handling code here:
        saveForAdd=true;
        codeTextField.enable();
        codeTextField.setText("");
        codeTextField.requestFocus(true);
        nameTextField.setText("");
        addressTextField.setText("");
        collaboratingCheckBox.setSelected(true);
    }//GEN-LAST:event_addButonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if (saveForAdd == true) {//save add
            boolean checkCode = true;
            for (SupplierDTO supplierDTO : supplierList) {
                if (codeTextField.getText().toUpperCase().equals(supplierDTO.getSupCode())) {
                    checkCode = false;
                }
            }
            if (codeTextField.getText().isEmpty() || checkCode == false || codeTextField.getText().length() > 10) {
                JOptionPane.showMessageDialog(null, "Code is not valid!");
                codeTextField.requestFocus(true);
            } else if (nameTextField.getText().isEmpty() || nameTextField.getText().length() > 50) {
                JOptionPane.showMessageDialog(null, "Name is not valid!");
                nameTextField.requestFocus(true);
            } else if (addressTextField.getText().isEmpty() || addressTextField.getText().length() > 50) {
                JOptionPane.showMessageDialog(null, "Address is not valid!");
                addressTextField.requestFocus(true);
            } else {
                int insertCollaborating = 0;
                if (collaboratingCheckBox.isSelected()) {
                    insertCollaborating = 1;
                }
                try {
                    SupplierDAO.insertSupplier(codeTextField.getText(), nameTextField.getText(), addressTextField.getText(), insertCollaborating);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                saveForAdd=false;
                loadSupplierTable();
            }
        } else { //save update
            if (nameTextField.getText().isEmpty() || nameTextField.getText().length() > 50) {
                JOptionPane.showMessageDialog(null, "Name is not valid!");
                nameTextField.requestFocus(true);
            } else if (addressTextField.getText().isEmpty() || addressTextField.getText().length() > 50) {
                JOptionPane.showMessageDialog(null, "Address is not valid!");
                addressTextField.requestFocus(true);
            } else {
                int updateCollaborating = 0;
                if (collaboratingCheckBox.isSelected()) {
                    updateCollaborating = 1;
                }
                try {
                    SupplierDAO.updateSupplier(codeTextField.getText(), nameTextField.getText(), addressTextField.getText(),updateCollaborating);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                saveForAdd = false;
                loadSupplierTable();
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (saveForAdd == false) {
            int choice = JOptionPane.showConfirmDialog(null, "Do you want to delete this row ?", "Delete", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                try {
                    SupplierDAO.deleteSupplier(codeTextField.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "This upplier is collaborating with some Item(s)\nYou have to delete that item(s)", "Delete", JOptionPane.CANCEL_OPTION);
                }
                loadSupplierTable();
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButon;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JCheckBox collaboratingCheckBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable supplierTable;
    // End of variables declaration//GEN-END:variables
}
